<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:components="components.*" 
	xmlns:frame="views.frame.*"
	initialize="init();">
	
	<fx:Script>
	<![CDATA[
		import model.Frame;
		import model.GIFAnimation;
		
		[Bindable]
		public var gifAnimation:GIFAnimation;
		
		[Bindable]
		public var showSmallList:Boolean = true;
		
		private function init():void
		{
			addEventListener(FrameEvent.FRAME_EDIT, frameEditHandler);
			addEventListener(FrameEvent.FRAME_EDITED, frameEditedHandler);
			addEventListener(FrameEvent.FRAME_REMOVE, frameRemoveHandler);
		}
		
		public function addFrame():void
		{
			var frame:Frame = new Frame();
			gifAnimation.frames.addItem(frame);
			
			list.editingFrame = frame;
		}
		
		public function editFrame(frame:Frame):void
		{
			if (list.editingFrame && list.editingFrame.empty)
				removeFrame(list.editingFrame);
			
			list.editingFrame = frame;
		}
		
		private function finishFrameEditing(frame:Frame):void
		{
			list.editingFrame = null;
			
			addFrame();
		}
		
		private function removeFrame(frame:Frame):void
		{
			if (list.editingFrame == frame)
				list.editingFrame = null;
			
			gifAnimation.frames.removeItemAt(gifAnimation.frames.getItemIndex(frame));
		}
		
		private function frameEditHandler(event:FrameEvent):void
		{
			editFrame(event.frame);
		}
		
		private function frameEditedHandler(event:FrameEvent):void
		{
			finishFrameEditing(event.frame);
		}
		
		private function frameRemoveHandler(event:FrameEvent):void
		{
			removeFrame(event.frame);
		}
		
	]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:GlowFilter id="glow" color="0xFFFFFF" blurX="2" blurY="2" strength="255" alpha="1"/>
		
		<s:DropShadowFilter id="dropShadow" distance="2" alpha="0.3"/>
		
	</fx:Declarations>
	
	<frame:FrameList id="list" dataProvider="{gifAnimation.frames}" 
		left="0" right="0" top="0" bottom="{showSmallList ? 50 : 0}" contentBackgroundAlpha="0"
		itemRenderer="views.frame.FrameItemRenderer" verticalScrollPolicy="off">
		<frame:layout>
			<s:HorizontalLayout verticalAlign="justify" horizontalAlign="center" 
				paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" gap="10"/>
		</frame:layout>
	</frame:FrameList>
	
	<s:Button label="+" right="-5" verticalCenter="0" click="addFrame();"
		visible="{!Frame(gifAnimation.frames.getItemAt(gifAnimation.frames.length - 1)).empty}"/>
	
	<s:ActionBar left="0" right="0" bottom="0" height="50"
		visible="{showSmallList}" includeInLayout="{showSmallList}"/>
	
	<components:List id="smallList" left="0" right="0" bottom="0" height="50"
		itemRenderer="views.frame.SmallFrameItemRenderer" dataProvider="{gifAnimation.frames}"
		change="list.ensureIndexIsVisible(event.newIndex);" contentBackgroundAlpha="0"
		visible="{showSmallList}" includeInLayout="{showSmallList}" 
		filters="{glow ? [ glow, dropShadow ] : null}">
		<components:layout>
			<s:HorizontalLayout paddingBottom="5" paddingLeft="5" paddingRight="5"
				paddingTop="5" gap="5" verticalAlign="justify" horizontalAlign="left"/>
		</components:layout>
	</components:List>
	
</s:Group>
